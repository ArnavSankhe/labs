function model = fit_model(...
    X_train, ... 
    y_train, ...
    model_type, ... 
    hyperparameters ...
)
    c = hyperparameters('BoxConstraint');
    kernel = hyperparameters('KernelFunction');
    p_order = hyperparameters('PolynomialOrder');
    epsilon = hyperparameters('Epsilon');
    kernelScale = hyperparameters('KernelScale');

    % fit the model accordingly if it's regression or classification
    if model_type == "regression"
        if kernel == "polynomial"
           model = fitrsvm(X_train, y_train, ...
                'KernelFunction', kernel, ...
                'BoxConstraint', c,...
                'PolynomialOrder', p_order, ...
                'Epsilon',epsilon...
           );
        elseif kernel == "gaussian"
           model = fitrsvm(X_train, y_train, ...
                'KernelFunction', kernel, ...
                'BoxConstraint', c,...
                'Epsilon',epsilon,...
                'KernelScale',kernelScale ...
           );
        elseif kernel == "linear"
           model = fitrsvm(X_train, y_train, ...
                'KernelFunction', kernel, ...
                'BoxConstraint', c,...
                'Epsilon',epsilon...
           );
        else
            % other kernel implementations go here
        end
    else
        if kernel == "polynomial"
            model = fitcsvm(X_train, y_train, ...
                'KernelFunction', kernel, ...
                'BoxConstraint', c,...
                'PolynomialOrder', p_order ...
            );
        elseif kernel == "gaussian"
           model = fitcsvm(X_train, y_train, ...
                'KernelFunction', kernel, ...
                'BoxConstraint', c,...
                'KernelScale', kernelScale ...
           );
        elseif kernel == "linear"
           model = fitcsvm(X_train, y_train, ...
                'KernelFunction', kernel, ...
                'BoxConstraint', c...
           );
        else
            % other kernel implementations go here
        end
    end
end